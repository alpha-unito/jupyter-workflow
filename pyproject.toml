[build-system]
requires = [
    "hatchling",
    "jupyterlab>=4.0.0,<5",
    "hatch-nodejs-version>=0.4.0",
    "hatch-requirements-txt"
]
build-backend = "hatchling.build"

[project]
name = "jupyter-workflow"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "LGPL-3.0-or-later"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: Jupyter",
    "Framework :: Jupyter :: JupyterLab",
    "Framework :: Jupyter :: JupyterLab :: 4",
    "Framework :: Jupyter :: JupyterLab :: Extensions",
    "Framework :: Jupyter :: JupyterLab :: Extensions :: Prebuilt",
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: POSIX",
    "Operating System :: MacOS",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Topic :: System :: Distributed Computing"
]
dynamic = ["authors", "dependencies", "description", "optional-dependencies", "version"]

[project.scripts]
jupyter-workflow = "jupyter_workflow.client.cli:main"

[project.urls]
Homepage = "https://jupyter-workflow.di.unito.it"
Package = "https://pypi.org/project/jupyter-workflow"
Repository = "https://github.com/alpha-unito/jupyter-workflow"

[tool.hatch.version]
source = "nodejs"

[tool.hatch.metadata.hooks.nodejs]
fields = ["description", "authors"]

[tool.hatch.metadata.hooks.requirements_txt]
files = ["requirements.txt"]

[tool.hatch.metadata.hooks.requirements_txt.optional-dependencies]
bandit = ["bandit-requirements.txt"]
docs = ["docs/requirements.txt"]
lint = ["lint-requirements.txt"]
test = ["test-requirements.txt"]

[tool.hatch.build.targets.sdist]
artifacts = ["jupyter_workflow/labextension"]
exclude = [".github"]

[tool.hatch.build.targets.wheel.shared-data]
"jupyter_workflow/labextension" = "share/jupyter/labextensions/jupyter-workflow"
"install.json" = "share/jupyter/labextensions/jupyter-workflow/install.json"
"jupyter-config/server-config" = "etc/jupyter/jupyter_server_config.d"

[tool.hatch.build.hooks.jupyter-builder]
dependencies = ["hatch-jupyter-builder>=0.5"]
build-function = "hatch_jupyter_builder.npm_builder"
ensured-targets = [
    "jupyter_workflow/labextension/static/style.js",
    "jupyter_workflow/labextension/package.json",
]
skip-if-exists = ["jupyter_workflow/labextension/static/style.js"]

[tool.hatch.build.hooks.version]
path = "jupyter_workflow/version.py"

[tool.hatch.build.hooks.jupyter-builder.build-kwargs]
build_cmd = "build:prod"
npm = ["jlpm"]

[tool.hatch.build.hooks.jupyter-builder.editable-build-kwargs]
build_cmd = "install:extension"
npm = ["jlpm"]
source_dir = "src"
build_dir = "jupyter_workflow/labextension"

[tool.jupyter-releaser.options]
version_cmd = "hatch version"

[tool.jupyter-releaser.hooks]
before-build-npm = [
    "python -m pip install 'jupyterlab>=4.0.0,<5'",
    "jlpm",
    "jlpm build:prod"
]
before-build-python = ["jlpm clean:all"]

[tool.check-wheel-contents]
ignore = ["W002"]

[tool.codespell]
ignore-words-list = "inout"

[tool.coverage.paths]
executor = ["jupyter_workflow/streamflow/executor.py", "/tmp/streamflow/*/executor.py"]

[tool.coverage.run]
branch = true
source_pkgs = ["jupyter_workflow"]

[tool.coverage.report]
exclude_lines = [
    # Exclude not implemented methods
    "raise NotImplementedError",
    # Exclude abstract methods
    "@(abc\\.)?abstractmethod",
    # Exclude Python script entrypoints
    "if __name__ == .__main__.:",
    # Exclude type checking lines
    "if TYPE_CHECKING:",
    # Exclude log messages
    "if logger.isEnabledFor"
]
ignore_errors = true
omit = [
    "jupyter_workflow/ipython/__main__.py",
    "tests/*"
]

[tool.isort]
profile = "black"